name: Deploy to GCP Compute Engine (Staging)

on:
  repository_dispatch:
    types: [deploy-staging]

jobs:
  deploy:
    runs-on: ubuntu-latest  

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Staging
        id: deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_IP_STG }} << 'EOF'
            set -e
            
            cd /home/${{ secrets.GCP_USERNAME }}/Website
            
            LAST_COMMIT=$(git rev-parse --short HEAD)
            GIT_STATUS=$(git status -s || echo "Failed to get status")
            BUILD_STATUS="Success"
            
            if ! git pull origin staging; then BUILD_STATUS="Git Pull Failed"; fi
            if ! npm install; then BUILD_STATUS="NPM Install Failed"; fi
            if ! npm run build; then BUILD_STATUS="Build Failed"; fi
            
            SERVICES_STATUS=$(sudo systemctl is-active website-app || echo "Service check failed")
            sudo systemctl restart website-app || echo "Service restart failed"
            
            echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_ENV
            echo "GIT_STATUS=$GIT_STATUS" >> $GITHUB_ENV
            echo "BUILD_STATUS=$BUILD_STATUS" >> $GITHUB_ENV
            echo "SERVICES_STATUS=$SERVICES_STATUS" >> $GITHUB_ENV
          EOF

      - name: Send Deployment Notification to Slack
        if: always()
        run: |
          JSON_PAYLOAD=$(jq -n \
            --arg commit "${{ env.LAST_COMMIT }}" \
            --arg git_status "${{ env.GIT_STATUS }}" \
            --arg build_status "${{ env.BUILD_STATUS }}" \
            --arg service_status "${{ env.SERVICES_STATUS }}" \
            '{
              text: "ðŸš€ *Staging Deployment*",
              attachments: [
                {
                  fields: [
                    { "title": "Commit", "value": $commit, "short": true },
                    { "title": "Git Status", "value": $git_status, "short": true },
                    { "title": "Build Status", "value": $build_status, "short": true },
                    { "title": "Service Status", "value": $service_status, "short": true }
                  ]
                }
              ]
            }')

          curl -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" ${{ secrets.SLACK_WEBHOOK_URL }}

          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
